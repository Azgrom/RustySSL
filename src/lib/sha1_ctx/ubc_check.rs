/***
* Copyright 2017 Marc Stevens <marc@marc-stevens.nl>, Dan Shumow <danshu@microsoft.com>
* Distributed under the MIT Software License.
* See accompanying file LICENSE.txt or copy at
* https://opensource.org/licenses/MIT
***/

use crate::sha1_ctx::disturbance_vectors_constants::{DV_I_43_0_BIT, DV_I_44_0_BIT, DV_I_45_0_BIT, DV_I_46_0_BIT, DV_I_46_2_BIT, DV_I_47_0_BIT, DV_I_47_2_BIT, DV_I_48_0_BIT, DV_I_48_2_BIT, DV_I_49_0_BIT, DV_I_49_2_BIT, DV_I_50_0_BIT, DV_I_50_2_BIT, DV_I_51_0_BIT, DV_I_51_2_BIT, DV_I_52_0_BIT, DV_II_45_0_BIT, DV_II_46_0_BIT, DV_II_46_2_BIT, DV_II_47_0_BIT, DV_II_48_0_BIT, DV_II_49_0_BIT, DV_II_49_2_BIT, DV_II_50_0_BIT, DV_II_50_2_BIT, DV_II_51_0_BIT, DV_II_51_2_BIT, DV_II_52_0_BIT, DV_II_53_0_BIT, DV_II_54_0_BIT, DV_II_55_0_BIT, DV_II_56_0_BIT, DV_MASK_SIZE};

pub struct Sha1DisturbanceVector {
    pub dv_type: u32,
    pub dv_k: u32,
    pub dv_b: u32,
    pub test_t: u32,
    pub mask_i: u32,
    pub mask_b: u32,
    pub dm: [u32; 80],
}

pub fn ubc_check(w: &[u32; 80], dv_mask: &mut [u32; DV_MASK_SIZE as usize]) {
    // Copy constants to function scoped immutable variables
    let dv_i_43_0 = DV_I_43_0_BIT;
    let dv_i_44_0 = DV_I_44_0_BIT;
    let dv_i_45_0 = DV_I_45_0_BIT;
    let dv_i_46_0 = DV_I_46_0_BIT;
    let dv_i_46_2 = DV_I_46_2_BIT;
    let dv_i_47_0 = DV_I_47_0_BIT;
    let dv_i_47_2 = DV_I_47_2_BIT;
    let dv_i_48_0 = DV_I_48_0_BIT;
    let dv_i_48_2 = DV_I_48_2_BIT;
    let dv_i_49_0 = DV_I_49_0_BIT;
    let dv_i_49_2 = DV_I_49_2_BIT;
    let dv_i_50_0 = DV_I_50_0_BIT;
    let dv_i_51_0 = DV_I_51_0_BIT;
    let dv_i_51_2 = DV_I_51_2_BIT;
    let dv_i_52_0 = DV_I_52_0_BIT;
    let dv_i_50_2 = DV_I_50_2_BIT;

    let dv_ii_45_0 = DV_II_45_0_BIT;
    let dv_ii_46_0 = DV_II_46_0_BIT;
    let dv_ii_46_2 = DV_II_46_2_BIT;
    let dv_ii_47_0 = DV_II_47_0_BIT;
    let dv_ii_48_0 = DV_II_48_0_BIT;
    let dv_ii_49_0 = DV_II_49_0_BIT;
    let dv_ii_49_2 = DV_II_49_2_BIT;
    let dv_ii_50_0 = DV_II_50_0_BIT;
    let dv_ii_50_2 = DV_II_50_2_BIT;
    let dv_ii_51_0 = DV_II_51_0_BIT;
    let dv_ii_51_2 = DV_II_51_2_BIT;
    let dv_ii_52_0 = DV_II_52_0_BIT;
    let dv_ii_53_0 = DV_II_53_0_BIT;
    let dv_ii_54_0 = DV_II_54_0_BIT;
    let dv_ii_55_0 = DV_II_55_0_BIT;
    let dv_ii_56_0 = DV_II_56_0_BIT;

    let mut mask: u32 = !0u32;

    mask &= ((((w[44] ^ w[45]) >> 29) & 1) - 1)
        | !(dv_i_48_0 | dv_i_51_0 | dv_i_52_0 | dv_ii_45_0 | dv_ii_46_0 | dv_ii_50_0 | dv_ii_51_0);
    mask &= (((((w[49] ^ w[50]) >> 29) & 1) - 1)
        | !(dv_i_46_0 | dv_ii_45_0 | dv_ii_50_0 | dv_ii_51_0 | dv_ii_55_0 | dv_ii_56_0));
    mask &= (((((w[48] ^ w[49]) >> 29) & 1) - 1)
        | !(dv_i_45_0 | dv_i_52_0 | dv_ii_49_0 | dv_ii_50_0 | dv_ii_54_0 | dv_ii_55_0));
    mask &= ((((w[47] ^ (w[50] >> 25)) & (1 << 4)) - (1 << 4))
        | !(dv_i_47_0 | dv_i_49_0 | dv_i_51_0 | dv_ii_45_0 | dv_ii_51_0 | dv_ii_56_0));
    mask &= (((((w[47] ^ w[48]) >> 29) & 1) - 1)
        | !(dv_i_44_0 | dv_i_51_0 | dv_ii_48_0 | dv_ii_49_0 | dv_ii_53_0 | dv_ii_54_0));
    mask &= (((((w[46] >> 4) ^ (w[49] >> 29)) & 1) - 1)
        | !(dv_i_46_0 | dv_i_48_0 | dv_i_50_0 | dv_i_52_0 | dv_ii_50_0 | dv_ii_55_0));
    mask &= (((((w[46] ^ w[47]) >> 29) & 1) - 1)
        | !(dv_i_43_0 | dv_i_50_0 | dv_ii_47_0 | dv_ii_48_0 | dv_ii_52_0 | dv_ii_53_0));
    mask &= (((((w[45] >> 4) ^ (w[48] >> 29)) & 1) - 1)
        | !(dv_i_45_0 | dv_i_47_0 | dv_i_49_0 | dv_i_51_0 | dv_ii_49_0 | dv_ii_54_0));
    mask &= (((((w[45] ^ w[46]) >> 29) & 1) - 1)
        | !(dv_i_49_0 | dv_i_52_0 | dv_ii_46_0 | dv_ii_47_0 | dv_ii_51_0 | dv_ii_52_0));
    mask &= (((((w[44] >> 4) ^ (w[47] >> 29)) & 1) - 1)
        | !(dv_i_44_0 | dv_i_46_0 | dv_i_48_0 | dv_i_50_0 | dv_ii_48_0 | dv_ii_53_0));
    mask &= (((((w[43] >> 4) ^ (w[46] >> 29)) & 1) - 1)
        | !(dv_i_43_0 | dv_i_45_0 | dv_i_47_0 | dv_i_49_0 | dv_ii_47_0 | dv_ii_52_0));
    mask &= (((((w[43] ^ w[44]) >> 29) & 1) - 1)
        | !(dv_i_47_0 | dv_i_50_0 | dv_i_51_0 | dv_ii_45_0 | dv_ii_49_0 | dv_ii_50_0));
    mask &= (((((w[42] >> 4) ^ (w[45] >> 29)) & 1) - 1)
        | !(dv_i_44_0 | dv_i_46_0 | dv_i_48_0 | dv_i_52_0 | dv_ii_46_0 | dv_ii_51_0));
    mask &= (((((w[41] >> 4) ^ (w[44] >> 29)) & 1) - 1)
        | !(dv_i_43_0 | dv_i_45_0 | dv_i_47_0 | dv_i_51_0 | dv_ii_45_0 | dv_ii_50_0));
    mask &= (((((w[40] ^ w[41]) >> 29) & 1) - 1)
        | !(dv_i_44_0 | dv_i_47_0 | dv_i_48_0 | dv_ii_46_0 | dv_ii_47_0 | dv_ii_56_0));
    mask &= (((((w[54] ^ w[55]) >> 29) & 1) - 1)
        | !(dv_i_51_0 | dv_ii_47_0 | dv_ii_50_0 | dv_ii_55_0 | dv_ii_56_0));
    mask &= (((((w[53] ^ w[54]) >> 29) & 1) - 1)
        | !(dv_i_50_0 | dv_ii_46_0 | dv_ii_49_0 | dv_ii_54_0 | dv_ii_55_0));
    mask &= (((((w[52] ^ w[53]) >> 29) & 1) - 1)
        | !(dv_i_49_0 | dv_ii_45_0 | dv_ii_48_0 | dv_ii_53_0 | dv_ii_54_0));
    mask &= ((((w[50] ^ (w[53] >> 25)) & (1 << 4)) - (1 << 4))
        | !(dv_i_50_0 | dv_i_52_0 | dv_ii_46_0 | dv_ii_48_0 | dv_ii_54_0));
    mask &= (((((w[50] ^ w[51]) >> 29) & 1) - 1)
        | !(dv_i_47_0 | dv_ii_46_0 | dv_ii_51_0 | dv_ii_52_0 | dv_ii_56_0));
    mask &= ((((w[49] ^ (w[52] >> 25)) & (1 << 4)) - (1 << 4))
        | !(dv_i_49_0 | dv_i_51_0 | dv_ii_45_0 | dv_ii_47_0 | dv_ii_53_0));
    mask &= ((((w[48] ^ (w[51] >> 25)) & (1 << 4)) - (1 << 4))
        | !(dv_i_48_0 | dv_i_50_0 | dv_i_52_0 | dv_ii_46_0 | dv_ii_52_0));
    mask &= (((((w[42] ^ w[43]) >> 29) & 1) - 1)
        | !(dv_i_46_0 | dv_i_49_0 | dv_i_50_0 | dv_ii_48_0 | dv_ii_49_0));
    mask &= (((((w[41] ^ w[42]) >> 29) & 1) - 1)
        | !(dv_i_45_0 | dv_i_48_0 | dv_i_49_0 | dv_ii_47_0 | dv_ii_48_0));
    mask &= (((((w[40] >> 4) ^ (w[43] >> 29)) & 1) - 1)
        | !(dv_i_44_0 | dv_i_46_0 | dv_i_50_0 | dv_ii_49_0 | dv_ii_56_0));
    mask &= (((((w[39] >> 4) ^ (w[42] >> 29)) & 1) - 1)
        | !(dv_i_43_0 | dv_i_45_0 | dv_i_49_0 | dv_ii_48_0 | dv_ii_55_0));

    if (mask & (dv_i_44_0 | dv_i_48_0 | dv_ii_47_0 | dv_ii_54_0 | dv_ii_56_0)) != 0 {
        mask &= (((((w[38] >> 4) ^ (w[41] >> 29)) & 1) - 1)
            | !(dv_i_44_0 | dv_i_48_0 | dv_ii_47_0 | dv_ii_54_0 | dv_ii_56_0));
    }

    mask &= (((((w[37] >> 4) ^ (w[40] >> 29)) & 1) - 1)
        | !(dv_i_43_0 | dv_i_47_0 | dv_ii_46_0 | dv_ii_53_0 | dv_ii_55_0));

    if (mask & (dv_i_52_0 | dv_ii_48_0 | dv_ii_51_0 | dv_ii_56_0)) != 0 {
        mask &= (((((w[55] ^ w[56]) >> 29) & 1) - 1)
            | !(dv_i_52_0 | dv_ii_48_0 | dv_ii_51_0 | dv_ii_56_0));
    }
    if (mask & (dv_i_52_0 | dv_ii_48_0 | dv_ii_50_0 | dv_ii_56_0)) != 0 {
        mask &= ((((w[52] ^ (w[55] >> 25)) & (1 << 4)) - (1 << 4))
            | !(dv_i_52_0 | dv_ii_48_0 | dv_ii_50_0 | dv_ii_56_0));
    }
    if (mask & (dv_i_51_0 | dv_ii_47_0 | dv_ii_49_0 | dv_ii_55_0)) != 0 {
        mask &= ((((w[51] ^ (w[54] >> 25)) & (1 << 4)) - (1 << 4))
            | !(dv_i_51_0 | dv_ii_47_0 | dv_ii_49_0 | dv_ii_55_0));
    }
    if (mask & (dv_i_48_0 | dv_ii_47_0 | dv_ii_52_0 | dv_ii_53_0)) != 0 {
        mask &= (((((w[51] ^ w[52]) >> 29) & 1) - 1)
            | !(dv_i_48_0 | dv_ii_47_0 | dv_ii_52_0 | dv_ii_53_0));
    }
    if (mask & (dv_i_46_0 | dv_i_49_0 | dv_ii_45_0 | dv_ii_48_0)) != 0 {
        mask &= (((((w[36] >> 4) ^ (w[40] >> 29)) & 1) - 1)
            | !(dv_i_46_0 | dv_i_49_0 | dv_ii_45_0 | dv_ii_48_0));
    }

    if (mask & (dv_i_52_0 | dv_ii_48_0 | dv_ii_49_0)) != 0 {
        mask &= ((0 - (((w[53] ^ w[56]) >> 29) & 1)) | !(dv_i_52_0 | dv_ii_48_0 | dv_ii_49_0));
    }

    if (mask & (dv_i_50_0 | dv_ii_46_0 | dv_ii_47_0)) != 0 {
        mask &= ((0 - (((w[51] ^ w[54]) >> 29) & 1)) | !(dv_i_50_0 | dv_ii_46_0 | dv_ii_47_0));
    }

    if (mask & (dv_i_49_0 | dv_i_51_0 | dv_ii_45_0)) != 0 {
        mask &= ((0 - (((w[50] ^ w[52]) >> 29) & 1)) | !(dv_i_49_0 | dv_i_51_0 | dv_ii_45_0));
    }

    if (mask & (dv_i_48_0 | dv_i_50_0 | dv_i_52_0)) != 0 {
        mask &= ((0 - (((w[49] ^ w[51]) >> 29) & 1)) | !(dv_i_48_0 | dv_i_50_0 | dv_i_52_0));
    }

    if (mask & (dv_i_47_0 | dv_i_49_0 | dv_i_51_0)) != 0 {
        mask &= ((0 - (((w[48] ^ w[50]) >> 29) & 1)) | !(dv_i_47_0 | dv_i_49_0 | dv_i_51_0));
    }

    if (mask & (dv_i_46_0 | dv_i_48_0 | dv_i_50_0)) != 0 {
        mask &= ((0 - (((w[47] ^ w[49]) >> 29) & 1)) | !(dv_i_46_0 | dv_i_48_0 | dv_i_50_0));
    }

    if (mask & (dv_i_45_0 | dv_i_47_0 | dv_i_49_0)) != 0 {
        mask &= ((0 - (((w[46] ^ w[48]) >> 29) & 1)) | !(dv_i_45_0 | dv_i_47_0 | dv_i_49_0));
    }

    mask &= ((((w[45] ^ w[47]) & (1 << 6)) - (1 << 6)) | !(dv_i_47_2 | dv_i_49_2 | dv_i_51_2));

    if (mask & (dv_i_44_0 | dv_i_46_0 | dv_i_48_0)) != 0 {
        mask &= ((0 - (((w[45] ^ w[47]) >> 29) & 1)) | !(dv_i_44_0 | dv_i_46_0 | dv_i_48_0));
    }

    mask &= (((((w[44] ^ w[46]) >> 6) & 1) - 1) | !(dv_i_46_2 | dv_i_48_2 | dv_i_50_2));

    if (mask & (dv_i_43_0 | dv_i_45_0 | dv_i_47_0)) != 0 {
        mask &= ((0 - (((w[44] ^ w[46]) >> 29) & 1)) | !(dv_i_43_0 | dv_i_45_0 | dv_i_47_0));
    }

    mask &= ((0 - ((w[41] ^ (w[42] >> 5)) & (1 << 1))) | !(dv_i_48_2 | dv_ii_46_2 | dv_ii_51_2));
    mask &= ((0 - ((w[40] ^ (w[41] >> 5)) & (1 << 1))) | !(dv_i_47_2 | dv_i_51_2 | dv_ii_50_2));

    if (mask & (dv_i_44_0 | dv_i_46_0 | dv_ii_56_0)) != 0 {
        mask &= ((0 - (((w[40] ^ w[42]) >> 4) & 1)) | !(dv_i_44_0 | dv_i_46_0 | dv_ii_56_0));
    }

    mask &= ((0 - ((w[39] ^ (w[40] >> 5)) & (1 << 1))) | !(dv_i_46_2 | dv_i_50_2 | dv_ii_49_2));

    if (mask & (dv_i_43_0 | dv_i_45_0 | dv_ii_55_0)) != 0 {
        mask &= ((0 - (((w[39] ^ w[41]) >> 4) & 1)) | !(dv_i_43_0 | dv_i_45_0 | dv_ii_55_0));
    }

    if (mask & (dv_i_44_0 | dv_ii_54_0 | dv_ii_56_0)) != 0 {
        mask &= ((0 - (((w[38] ^ w[40]) >> 4) & 1)) | !(dv_i_44_0 | dv_ii_54_0 | dv_ii_56_0));
    }

    if (mask & (dv_i_43_0 | dv_ii_53_0 | dv_ii_55_0)) != 0 {
        mask &= ((0 - (((w[37] ^ w[39]) >> 4) & 1)) | !(dv_i_43_0 | dv_ii_53_0 | dv_ii_55_0));
    }

    mask &= ((0 - ((w[36] ^ (w[37] >> 5)) & (1 << 1))) | !(dv_i_47_2 | dv_i_50_2 | dv_ii_46_2));

    if (mask & (dv_i_45_0 | dv_i_48_0 | dv_ii_47_0)) != 0 {
        mask &=
            (((((w[35] >> 4) ^ (w[39] >> 29)) & 1) - 1) | !(dv_i_45_0 | dv_i_48_0 | dv_ii_47_0));
    }

    if (mask & (dv_i_48_0 | dv_ii_48_0)) != 0 {
        mask &= ((0 - ((w[63] ^ (w[64] >> 5)) & (1 << 0))) | !(dv_i_48_0 | dv_ii_48_0));
    }

    if (mask & (dv_i_45_0 | dv_ii_45_0)) != 0 {
        mask &= ((0 - ((w[63] ^ (w[64] >> 5)) & (1 << 1))) | !(dv_i_45_0 | dv_ii_45_0));
    }

    if (mask & (dv_i_47_0 | dv_ii_47_0)) != 0 {
        mask &= ((0 - ((w[62] ^ (w[63] >> 5)) & (1 << 0))) | !(dv_i_47_0 | dv_ii_47_0));
    }

    if (mask & (dv_i_46_0 | dv_ii_46_0)) != 0 {
        mask &= ((0 - ((w[61] ^ (w[62] >> 5)) & (1 << 0))) | !(dv_i_46_0 | dv_ii_46_0));
    }

    mask &= ((0 - ((w[61] ^ (w[62] >> 5)) & (1 << 2))) | !(dv_i_46_2 | dv_ii_46_2));

    if (mask & (dv_i_45_0 | dv_ii_45_0)) != 0 {
        mask &= ((0 - ((w[60] ^ (w[61] >> 5)) & (1 << 0))) | !(dv_i_45_0 | dv_ii_45_0));
    }

    if (mask & (dv_ii_51_0 | dv_ii_54_0)) != 0 {
        mask &= (((((w[58] ^ w[59]) >> 29) & 1) - 1) | !(dv_ii_51_0 | dv_ii_54_0));
    }

    if (mask & (dv_ii_50_0 | dv_ii_53_0)) != 0 {
        mask &= (((((w[57] ^ w[58]) >> 29) & 1) - 1) | !(dv_ii_50_0 | dv_ii_53_0));
    }

    if (mask & (dv_ii_52_0 | dv_ii_54_0)) != 0 {
        mask &= ((((w[56] ^ (w[59] >> 25)) & (1 << 4)) - (1 << 4)) | !(dv_ii_52_0 | dv_ii_54_0));
    }

    if (mask & (dv_ii_51_0 | dv_ii_52_0)) != 0 {
        mask &= ((0 - (((w[56] ^ w[59]) >> 29) & 1)) | !(dv_ii_51_0 | dv_ii_52_0));
    }

    if (mask & (dv_ii_49_0 | dv_ii_52_0)) != 0 {
        mask &= (((((w[56] ^ w[57]) >> 29) & 1) - 1) | !(dv_ii_49_0 | dv_ii_52_0));
    }

    if (mask & (dv_ii_51_0 | dv_ii_53_0)) != 0 {
        mask &= ((((w[55] ^ (w[58] >> 25)) & (1 << 4)) - (1 << 4)) | !(dv_ii_51_0 | dv_ii_53_0));
    }

    if (mask & (dv_ii_50_0 | dv_ii_52_0)) != 0 {
        mask &= ((((w[54] ^ (w[57] >> 25)) & (1 << 4)) - (1 << 4)) | !(dv_ii_50_0 | dv_ii_52_0));
    }

    if (mask & (dv_ii_49_0 | dv_ii_51_0)) != 0 {
        mask &= ((((w[53] ^ (w[56] >> 25)) & (1 << 4)) - (1 << 4)) | !(dv_ii_49_0 | dv_ii_51_0));
    }

    mask &= ((((w[51] ^ (w[50] >> 5)) & (1 << 1)) - (1 << 1)) | !(dv_i_50_2 | dv_ii_46_2));
    mask &= ((((w[48] ^ w[50]) & (1 << 6)) - (1 << 6)) | !(dv_i_50_2 | dv_ii_46_2));

    if (mask & (dv_i_51_0 | dv_i_52_0)) != 0 {
        mask &= ((0 - (((w[48] ^ w[55]) >> 29) & 1)) | !(dv_i_51_0 | dv_i_52_0));
    }

    mask &= ((((w[47] ^ w[49]) & (1 << 6)) - (1 << 6)) | !(dv_i_49_2 | dv_i_51_2));
    mask &= ((((w[48] ^ (w[47] >> 5)) & (1 << 1)) - (1 << 1)) | !(dv_i_47_2 | dv_ii_51_2));
    mask &= ((((w[46] ^ w[48]) & (1 << 6)) - (1 << 6)) | !(dv_i_48_2 | dv_i_50_2));
    mask &= ((((w[47] ^ (w[46] >> 5)) & (1 << 1)) - (1 << 1)) | !(dv_i_46_2 | dv_ii_50_2));
    mask &= ((0 - ((w[44] ^ (w[45] >> 5)) & (1 << 1))) | !(dv_i_51_2 | dv_ii_49_2));
    mask &= ((((w[43] ^ w[45]) & (1 << 6)) - (1 << 6)) | !(dv_i_47_2 | dv_i_49_2));
    mask &= (((((w[42] ^ w[44]) >> 6) & 1) - 1) | !(dv_i_46_2 | dv_i_48_2));
    mask &= ((((w[43] ^ (w[42] >> 5)) & (1 << 1)) - (1 << 1)) | !(dv_ii_46_2 | dv_ii_51_2));
    mask &= ((((w[42] ^ (w[41] >> 5)) & (1 << 1)) - (1 << 1)) | !(dv_i_51_2 | dv_ii_50_2));
    mask &= ((((w[41] ^ (w[40] >> 5)) & (1 << 1)) - (1 << 1)) | !(dv_i_50_2 | dv_ii_49_2));

    if (mask & (dv_i_52_0 | dv_ii_51_0)) != 0 {
        mask &= ((((w[39] ^ (w[43] >> 25)) & (1 << 4)) - (1 << 4)) | !(dv_i_52_0 | dv_ii_51_0));
    }

    if (mask & (dv_i_51_0 | dv_ii_50_0)) != 0 {
        mask &= ((((w[38] ^ (w[42] >> 25)) & (1 << 4)) - (1 << 4)) | !(dv_i_51_0 | dv_ii_50_0));
    }

    if (mask & (dv_i_48_2 | dv_i_51_2)) != 0 {
        mask &= ((0 - ((w[37] ^ (w[38] >> 5)) & (1 << 1))) | !(dv_i_48_2 | dv_i_51_2));
    }

    if (mask & (dv_i_50_0 | dv_ii_49_0)) != 0 {
        mask &= ((((w[37] ^ (w[41] >> 25)) & (1 << 4)) - (1 << 4)) | !(dv_i_50_0 | dv_ii_49_0));
    }

    if (mask & (dv_ii_52_0 | dv_ii_54_0)) != 0 {
        mask &= ((0 - ((w[36] ^ w[38]) & (1 << 4))) | !(dv_ii_52_0 | dv_ii_54_0));
    }

    mask &= ((0 - ((w[35] ^ (w[36] >> 5)) & (1 << 1))) | !(dv_i_46_2 | dv_i_49_2));

    if (mask & (dv_i_51_0 | dv_ii_47_0)) != 0 {
        mask &= ((((w[35] ^ (w[39] >> 25)) & (1 << 3)) - (1 << 3)) | !(dv_i_51_0 | dv_ii_47_0));
    }

    if mask != 0 {
        if (mask & dv_i_43_0) != 0 {
            if (!((w[61] ^ (w[62] >> 5)) & (1 << 1))
                | !(!((w[59] ^ (w[63] >> 25)) & (1 << 5)))
                | !((w[58] ^ (w[63] >> 30)) & (1 << 0)))
                != 0
            {
                mask &= !dv_i_43_0;
            }
        }
        if (mask & dv_i_44_0) != 0 {
            if (!((w[62] ^ (w[63] >> 5)) & (1 << 1))
                | !(!((w[60] ^ (w[64] >> 25)) & (1 << 5)))
                | !((w[59] ^ (w[64] >> 30)) & (1 << 0)))
                != 0
            {
                mask &= !dv_i_44_0;
            }
        }

        if (mask & dv_i_46_2) != 0 {
            mask &= ((!((w[40] ^ w[42]) >> 2)) | !dv_i_46_2);
        }

        if (mask & dv_i_47_2) != 0 {
            if (!((w[62] ^ (w[63] >> 5)) & (1 << 2)) | !(!((w[41] ^ w[43]) & (1 << 6)))) != 0 {
                mask &= !dv_i_47_2;
            }
        }

        if (mask & dv_i_48_2) != 0 {
            if (!((w[63] ^ (w[64] >> 5)) & (1 << 2)) | !(!((w[48] ^ (w[49] << 5)) & (1 << 6)))) != 0
            {
                mask &= !dv_i_48_2;
            }
        }
        if (mask & dv_i_49_2) != 0 {
            if (!(!((w[49] ^ (w[50] << 5)) & (1 << 6)))
                | !((w[42] ^ w[50]) & (1 << 1))
                | !(!((w[39] ^ (w[40] << 5)) & (1 << 6)))
                | !((w[38] ^ w[40]) & (1 << 1)))
                != 0
            {
                mask &= !dv_i_49_2;
            }
        }

        if (mask & dv_i_50_0) != 0 {
            mask &= (((w[36] ^ w[37]) << 7) | !dv_i_50_0);
        }

        if (mask & dv_i_50_2) != 0 {
            mask &= (((w[43] ^ w[51]) << 11) | !dv_i_50_2);
        }

        if (mask & dv_i_51_0) != 0 {
            mask &= (((w[37] ^ w[38]) << 9) | !dv_i_51_0);
        }

        if (mask & dv_i_51_2) != 0 {
            if (!(!((w[51] ^ (w[52] << 5)) & (1 << 6)))
                | !(!((w[49] ^ w[51]) & (1 << 6)))
                | !(!((w[37] ^ (w[37] >> 5)) & (1 << 1)))
                | !(!((w[35] ^ (w[39] >> 25)) & (1 << 5))))
                != 0
            {
                mask &= !dv_i_51_2;
            }
        }

        if (mask & dv_i_52_0) != 0 {
            mask &= (((w[38] ^ w[39]) << 11) | !dv_i_52_0);
        }

        if (mask & dv_ii_46_2) != 0 {
            mask &= (((w[47] ^ w[51]) << 17) | !dv_ii_46_2);
        }

        if (mask & dv_ii_48_0) != 0 {
            if (!(!((w[36] ^ (w[40] >> 25)) & (1 << 3))) | !((w[35] ^ (w[40] << 2)) & (1 << 30)))
                != 0
            {
                mask &= !dv_ii_48_0;
            }
        }

        if (mask & dv_ii_49_0) != 0 {
            if (!(!((w[37] ^ (w[41] >> 25)) & (1 << 3))) | !((w[36] ^ (w[41] << 2)) & (1 << 30)))
                != 0
            {
                mask &= !dv_ii_49_0;
            }
        }

        if (mask & dv_ii_49_2) != 0 {
            if (!(!((w[53] ^ (w[54] << 5)) & (1 << 6)))
                | !(!((w[51] ^ w[53]) & (1 << 6)))
                | !((w[50] ^ w[54]) & (1 << 1))
                | !(!((w[45] ^ (w[46] << 5)) & (1 << 6)))
                | !(!((w[37] ^ (w[41] >> 25)) & (1 << 5)))
                | !((w[36] ^ (w[41] >> 30)) & (1 << 0)))
                != 0
            {
                mask &= !dv_ii_49_2;
            }
        }

        if (mask & dv_ii_50_0) != 0 {
            if (!((w[55] ^ w[58]) & (1 << 29))
                | !(!((w[38] ^ (w[42] >> 25)) & (1 << 3)))
                | !((w[37] ^ (w[42] << 2)) & (1 << 30)))
                != 0
            {
                mask &= !dv_ii_50_0;
            }
        }

        if (mask & dv_ii_50_2) != 0 {
            if (!(!((w[54] ^ (w[55] << 5)) & (1 << 6)))
                | !(!((w[52] ^ w[54]) & (1 << 6)))
                | !((w[51] ^ w[55]) & (1 << 1))
                | !((w[45] ^ w[47]) & (1 << 1))
                | !(!((w[38] ^ (w[42] >> 25)) & (1 << 5)))
                | !((w[37] ^ (w[42] >> 30)) & (1 << 0)))
                != 0
            {
                mask &= !dv_ii_50_2;
            }
        }

        if (mask & dv_ii_51_0) != 0 {
            if (!(!((w[39] ^ (w[43] >> 25)) & (1 << 3))) | !((w[38] ^ (w[43] << 2)) & (1 << 30)))
                != 0
            {
                mask &= !dv_ii_51_0;
            }
        }

        if (mask & dv_ii_51_2) != 0 {
            if (!(!((w[55] ^ (w[56] << 5)) & (1 << 6)))
                | !(!((w[53] ^ w[55]) & (1 << 6)))
                | !((w[52] ^ w[56]) & (1 << 1))
                | !((w[46] ^ w[48]) & (1 << 1))
                | !(!((w[39] ^ (w[43] >> 25)) & (1 << 5)))
                | !((w[38] ^ (w[43] >> 30)) & (1 << 0)))
                != 0
            {
                mask &= !dv_ii_51_2;
            }
        }

        if (mask & dv_ii_52_0) != 0 {
            if (!(!((w[59] ^ w[60]) & (1 << 29)))
                | !(!((w[40] ^ (w[44] >> 25)) & (1 << 3)))
                | !(!((w[40] ^ (w[44] >> 25)) & (1 << 4)))
                | !((w[39] ^ (w[44] << 2)) & (1 << 30)))
                != 0
            {
                mask &= !dv_ii_52_0;
            }
        }

        if (mask & dv_ii_53_0) != 0 {
            if (!((w[58] ^ w[61]) & (1 << 29))
                | !(!((w[57] ^ (w[61] >> 25)) & (1 << 4)))
                | !(!((w[41] ^ (w[45] >> 25)) & (1 << 3)))
                | !(!((w[41] ^ (w[45] >> 25)) & (1 << 4))))
                != 0
            {
                mask &= !dv_ii_53_0;
            }
        }

        if (mask & dv_ii_54_0) != 0 {
            if (!(!((w[58] ^ (w[62] >> 25)) & (1 << 4)))
                | !(!((w[42] ^ (w[46] >> 25)) & (1 << 3)))
                | !(!((w[42] ^ (w[46] >> 25)) & (1 << 4))))
                != 0
            {
                mask &= !dv_ii_54_0;
            }
        }

        if (mask & dv_ii_55_0) != 0 {
            if (!(!((w[59] ^ (w[63] >> 25)) & (1 << 4)))
                | !(!((w[57] ^ (w[59] >> 25)) & (1 << 4)))
                | !(!((w[43] ^ (w[47] >> 25)) & (1 << 3)))
                | !(!((w[43] ^ (w[47] >> 25)) & (1 << 4))))
                != 0
            {
                mask &= !dv_ii_55_0;
            }
        }
        if (mask & dv_ii_56_0) != 0 {
            if (!(!((w[60] ^ (w[64] >> 25)) & (1 << 4)))
                | !(!((w[44] ^ (w[48] >> 25)) & (1 << 3)))
                | !(!((w[44] ^ (w[48] >> 25)) & (1 << 4))))
                != 0
            {
                mask &= !dv_ii_56_0;
            }
        }
    }

    dv_mask[0] = mask;
}
